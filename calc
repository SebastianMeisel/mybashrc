#!/bin/bash
function = () {
        rechnung=$(printf "%s" "$@")
	echo "scale=${2:-2} ; ${rechnung}" | \
		sed -E -e '{s/,/./g; s/Â·/*/g' -e "s/^|$/\'/g}"  | \
		xargs -I{} echo {} | bc | sed -r 's/\./,/g;:loop;s|\b([0-9]+)([0-9]{3})\b|\1.\2|g;t loop'
}

# binary to hex
function =bx () {
    binary=$(sed 's/ //g' <<< "$@")
    echo "ibase=2; obase=10000; $binary" | bc | sed -E 's/(..)/\1 /g'
	}

# decimal to hex
function =x () {
    decimal=$(printf "%s" $@ )
    echo "ibase=10; obase=16; $decimal" | bc | sed -E 's/(..)/\1 /g'
	}

# hex to decimal
function =xd () {
    hex=$(sed 's/ //g' <<< "$@")
    echo "ibase=16;  $hex" | bc | sed -r ':loop;s|\b([0-9]+)([0-9]{3})\b|\1.\2|g;t loop'
	}

# decimal to binary
function =b () {
    decimal=$(printf "%s" $@ )
    echo "ibase=10; obase=2; $decimal" | bc
	}
	
# binary to decimal
function =bd () {
    binary=$(sed 's/ //g' <<< "$@")
    echo "ibase=2;  $binary" | bc | sed -r ':loop;s|\b([0-9]+)([0-9]{3})\b|\1.\2|g;t loop'
	}

case $0 in
   ${HOME}/.local/bin/=) echo $@
	= "$@" 
	;; 
   ${HOME}/.local/bin/=bx) echo $@
	=bx "$@" 
	;; 
   ${HOME}/.local/bin/=x) echo $@
	=x "$@" 
	;; 
   ${HOME}/.local/bin/=xd) echo $@
	=xd "$@" 
	;; 
   ${HOME}/.local/bin/=b) echo $@
	=b "$@" 
	;; 
   ${HOME}/.local/bin/=bd) echo $@
	=bd "$@" 
	;; 
esac
