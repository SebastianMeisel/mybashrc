# Define colors
RED="\033[1;31m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
RESET="\033[0m"

# Function to get Git branch and status
parse_git_branch_and_status() {
  
  if  [[ $(git rev-parse --is-inside-work-tree  2> /dev/null) == "true" ]] then
    branch=$(git symbolic-ref --short HEAD 2>/dev/null || git describe --tags --exact-match 2>/dev/null)
    status=$(git status --porcelain 2>/dev/null)
    if [[ -n $status ]]; then
      printf "(%s${YELLOW}*${RESET})" "$branch"
    else
      printf "(%s)" "$branch"
    fi
  fi
}

# Function to determine the prompt color based on the exit status
function get_exit_status_color() {
  local last_exit_code=$1  # Use the exit code passed to the function
  if [[ $last_exit_code -eq 0 ]]; then
    printf "${GREEN}✔${RESET}"
  else
    printf "${RED}✘${RESET}"
  fi
}

# Set the PS1 prompto
export PS1='$(get_exit_status_color $?) $(parse_git_branch_and_status) '  # Dynamically add the exit status
PS1="┌ [\[\033[1;34m\]\u\[\033[0m\]@\[\033[1;34m\]\h\[\033[0m\]:\[\033[1;34m\]\l\[\033[0m\] \[\033[1;33m\]\w\[\033[0m\]] ${PS1}\n└ \$ "

